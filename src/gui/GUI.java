/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import main.ECC;
import main.EllipticCurve;
import main.Point;

/**
 *
 * @author user
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel22 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        plainTextFileChooserJButton = new javax.swing.JButton();
        plainTextFilePathJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        plainTextJTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        publicKeyJTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        privateKeyJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        publicKeyPathJTextField = new javax.swing.JTextField();
        publicKeyFileChooserJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        privateKeyPathJTextField = new javax.swing.JTextField();
        privateKeyFileChooserJButton = new javax.swing.JButton();
        encryptJButton = new javax.swing.JButton();
        decryptJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        cipherTextJTextArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        cipherTextFilePathJTextField = new javax.swing.JTextField();
        cipherTextFIleChooserJButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        plainTextSaverJButton = new javax.swing.JButton();
        cipherTextSaverJButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        aJTextField = new javax.swing.JTextField();
        bJTextField = new javax.swing.JTextField();
        basePointYJTextField = new javax.swing.JTextField();
        pJTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        basePointXJTextField = new javax.swing.JTextField();
        generatorPublicPrivateKeyJButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        nAJTextField = new javax.swing.JTextField();
        publicKeySaverJButton = new javax.swing.JButton();
        privateKeySaverJButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        encryptDurationJTextField = new javax.swing.JTextField();
        decryptDurationJTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        plainTextSizeJTextField = new javax.swing.JTextField();
        cipherTextSizeJTextField = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();

        jLabel22.setText("byte");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Masukkan file yang ingin dienkripsi");

        plainTextFileChooserJButton.setText("Pilih");
        plainTextFileChooserJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plainTextFileChooserJButtonActionPerformed(evt);
            }
        });

        plainTextFilePathJTextField.setEditable(false);
        plainTextFilePathJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plainTextFilePathJTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Isi file:");

        plainTextJTextArea.setColumns(20);
        plainTextJTextArea.setLineWrap(true);
        plainTextJTextArea.setRows(5);
        jScrollPane1.setViewportView(plainTextJTextArea);

        jLabel3.setText("Kunci publik: ");

        publicKeyJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicKeyJTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Kunci privat:");

        jLabel5.setText("Atau masukkan nama file kunci publik");

        publicKeyPathJTextField.setEditable(false);

        publicKeyFileChooserJButton.setText("Pilih");
        publicKeyFileChooserJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicKeyFileChooserJButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Atau masukkan nama file kunci privat");

        privateKeyPathJTextField.setEditable(false);

        privateKeyFileChooserJButton.setText("Pilih");
        privateKeyFileChooserJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privateKeyFileChooserJButtonActionPerformed(evt);
            }
        });

        encryptJButton.setText("Enkripsi >>");
        encryptJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptJButtonActionPerformed(evt);
            }
        });

        decryptJButton.setText("<< Dekripsi");
        decryptJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptJButtonActionPerformed(evt);
            }
        });

        cipherTextJTextArea.setColumns(20);
        cipherTextJTextArea.setLineWrap(true);
        cipherTextJTextArea.setRows(5);
        jScrollPane2.setViewportView(cipherTextJTextArea);

        jLabel8.setText("Atau masukkan file yang ingin didekripsi");

        cipherTextFilePathJTextField.setEditable(false);

        cipherTextFIleChooserJButton.setText("Pilih");
        cipherTextFIleChooserJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cipherTextFIleChooserJButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Isi file");

        plainTextSaverJButton.setText("Simpan Plaintext");
        plainTextSaverJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plainTextSaverJButtonActionPerformed(evt);
            }
        });

        cipherTextSaverJButton.setText("Simpan Ciphertext");
        cipherTextSaverJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cipherTextSaverJButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Bangkitkan kunci :");

        jLabel10.setText("a");

        jLabel11.setText("b");

        jLabel12.setText("p");

        jLabel13.setText("Base Point: ");

        jLabel14.setText("x:");

        aJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aJTextFieldActionPerformed(evt);
            }
        });

        bJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bJTextFieldActionPerformed(evt);
            }
        });

        basePointYJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basePointYJTextFieldActionPerformed(evt);
            }
        });

        pJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pJTextFieldActionPerformed(evt);
            }
        });

        jLabel15.setText("y:");

        basePointXJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basePointXJTextFieldActionPerformed(evt);
            }
        });

        generatorPublicPrivateKeyJButton.setText("Bangkitkan >>");
        generatorPublicPrivateKeyJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatorPublicPrivateKeyJButtonActionPerformed(evt);
            }
        });

        jLabel16.setText("nA");

        publicKeySaverJButton.setText("Simpan");
        publicKeySaverJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicKeySaverJButtonActionPerformed(evt);
            }
        });

        privateKeySaverJButton.setText("Simpan");
        privateKeySaverJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privateKeySaverJButtonActionPerformed(evt);
            }
        });

        jLabel17.setText("Lama enkripsi :");

        encryptDurationJTextField.setEditable(false);

        decryptDurationJTextField.setEditable(false);
        decryptDurationJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptDurationJTextFieldActionPerformed(evt);
            }
        });

        jLabel18.setText("Lama dekripsi :");

        jLabel19.setText("Ukuran file:");

        jLabel20.setText("Ukuran file:");

        plainTextSizeJTextField.setEditable(false);
        plainTextSizeJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plainTextSizeJTextFieldActionPerformed(evt);
            }
        });

        cipherTextSizeJTextField.setEditable(false);
        cipherTextSizeJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cipherTextSizeJTextFieldActionPerformed(evt);
            }
        });

        jLabel21.setText("byte");

        jLabel23.setText("byte");

        jLabel24.setText("ms");

        jLabel25.setText("ms");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(aJTextField))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addGap(30, 30, 30)
                                                .addComponent(bJTextField))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addGap(30, 30, 30)
                                                .addComponent(pJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(generatorPublicPrivateKeyJButton))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel16)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(nAJTextField))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel14)
                                            .addGap(18, 18, 18)
                                            .addComponent(basePointXJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel15)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(basePointYJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(plainTextSaverJButton))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(publicKeyPathJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(privateKeyPathJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(38, 38, 38)
                                                .addComponent(jLabel3))
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(publicKeyJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(privateKeyJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(publicKeyFileChooserJButton)
                                            .addComponent(privateKeyFileChooserJButton)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(privateKeySaverJButton)
                                            .addComponent(publicKeySaverJButton)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(decryptJButton)
                                    .addComponent(encryptJButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(jLabel18)
                                                        .addGap(2, 2, 2)
                                                        .addComponent(decryptDurationJTextField))
                                                    .addComponent(cipherTextSaverJButton))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel25)
                                                .addGap(12, 12, 12)
                                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(1, 1, 1)
                                                .addComponent(cipherTextSizeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel23)))
                                        .addGap(0, 44, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(454, 454, 454)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cipherTextFilePathJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cipherTextFIleChooserJButton))
                                    .addComponent(jLabel8)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(plainTextFilePathJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(plainTextFileChooserJButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(1, 1, 1)
                                .addComponent(encryptDurationJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel24)
                                .addGap(21, 21, 21)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(plainTextSizeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(publicKeyJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(publicKeySaverJButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(publicKeyPathJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(publicKeyFileChooserJButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(privateKeyJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(privateKeySaverJButton))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(privateKeyPathJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(privateKeyFileChooserJButton))
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(aJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(bJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(pJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(basePointYJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15)
                                    .addComponent(basePointXJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(generatorPublicPrivateKeyJButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(nAJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(plainTextFileChooserJButton)
                            .addComponent(plainTextFilePathJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cipherTextFilePathJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cipherTextFIleChooserJButton)))
                            .addComponent(jLabel8))
                        .addGap(6, 6, 6)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(encryptJButton)
                                .addGap(18, 18, 18)
                                .addComponent(decryptJButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(encryptDurationJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(decryptDurationJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(plainTextSizeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(cipherTextSizeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGap(12, 12, 12)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plainTextSaverJButton)
                    .addComponent(cipherTextSaverJButton))
                .addGap(0, 3, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void plainTextFileChooserJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plainTextFileChooserJButtonActionPerformed
        // TODO add your handling code here:
        StringBuilder plaintTextBuilder = new StringBuilder();
        int retval;
        
        JFileChooser fileChooser = new JFileChooser();
        retval = fileChooser.showOpenDialog(this);
        if(retval == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            plainTextFilePathJTextField.setText(selectedFile.getName());
            try {
                BufferedReader reader = new BufferedReader(new FileReader(selectedFile));
                String currentLine = reader.readLine();
                while(currentLine != null) {
                    plaintTextBuilder.append(currentLine).append("\n");
                    currentLine = reader.readLine();
                }
                plainText = plaintTextBuilder.toString();
                plainTextJTextArea.setText(plainText);
            }
            catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_plainTextFileChooserJButtonActionPerformed

    private void plainTextFilePathJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plainTextFilePathJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_plainTextFilePathJTextFieldActionPerformed

    private void publicKeyJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicKeyJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publicKeyJTextFieldActionPerformed

    private void cipherTextFIleChooserJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cipherTextFIleChooserJButtonActionPerformed
        // TODO add your handling code here:
        StringBuilder plaintTextBuilder = new StringBuilder();
        int retval;
        
        JFileChooser fileChooser = new JFileChooser();
        retval = fileChooser.showOpenDialog(this);
        if(retval == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            cipherTextFilePathJTextField.setText(selectedFile.getName());
            try {
                BufferedReader reader = new BufferedReader(new FileReader(selectedFile));
                String currentLine = reader.readLine();
                while(currentLine != null) {
                    plaintTextBuilder.append(currentLine).append("\n");
                    currentLine = reader.readLine();
                }
                cipherText = plaintTextBuilder.toString();
                cipherTextJTextArea.setText(cipherText);
            } 
            catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cipherTextFIleChooserJButtonActionPerformed

    private void publicKeyFileChooserJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicKeyFileChooserJButtonActionPerformed
        // TODO add your handling code here:
        int retval;
        
        JFileChooser fileChooser = new JFileChooser();
        retval = fileChooser.showOpenDialog(this);
        if(retval == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            publicKeyPathJTextField.setText(selectedFile.getName());
            try {
                BufferedReader reader = new BufferedReader(new FileReader(selectedFile));
                String currentLine = reader.readLine();
                String publicKeyX = currentLine;
                String publicKeyY = new String();
                while(currentLine != null) {
                    currentLine = reader.readLine();
                    publicKeyY = currentLine;
                }
                publicKey = new Point(new BigInteger(publicKeyX), new BigInteger(publicKeyY));
                publicKeyJTextField.setText(publicKey.toString());
            }
            catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_publicKeyFileChooserJButtonActionPerformed

    private void privateKeyFileChooserJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privateKeyFileChooserJButtonActionPerformed
        // TODO add your handling code here:
        StringBuilder plaintTextBuilder = new StringBuilder();
        int retval;
        
        JFileChooser fileChooser = new JFileChooser();
        retval = fileChooser.showOpenDialog(this);
        if(retval == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            privateKeyPathJTextField.setText(selectedFile.getName());
            try {
                BufferedReader reader = new BufferedReader(new FileReader(selectedFile));
                String currentLine = reader.readLine();
                while(currentLine != null) {
                    plaintTextBuilder.append(currentLine);
                    currentLine = reader.readLine();
                }
                privateKey = plaintTextBuilder.toString();
                privateKeyJTextField.setText(privateKey);
            } 
            catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_privateKeyFileChooserJButtonActionPerformed

    private void encryptJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptJButtonActionPerformed
        // TODO add your handling code here:
        plainText = plainTextJTextArea.getText();
        byte [] data = plainText.getBytes();
        byte[] encryptedFile = new byte[2*data.length];
        StringBuilder sb = new StringBuilder();
        cipherTextPoint = new Point[2*data.length];
        long startTime = System.currentTimeMillis();
        for(int i=0; i<plainText.length(); i++) {

            Point plain = new Point(data[i], myCurve);

            Point[] enkrip = alice.encrypt(plain);
            encryptedFile[i*2] = enkrip[0].convertToByte();
            encryptedFile[i*2+1] = enkrip[1].convertToByte();
            cipherTextPoint[i*2] = enkrip[0];
            cipherTextPoint[i*2+1] = enkrip[1];
            sb.append(String.format("%02X ", encryptedFile[i*2]));
            sb.append(String.format("%02X ", encryptedFile[i*2+1]));

        }
        long endTime = System.currentTimeMillis();
        long seconds = (endTime - startTime);
        String s = "" + seconds;
        cipherTextJTextArea.setText(sb.toString());
        encryptDurationJTextField.setText(s);
        plainTextSizeJTextField.setText("" + data.length);
    }//GEN-LAST:event_encryptJButtonActionPerformed

    private void decryptJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptJButtonActionPerformed
        // TODO add your handling code here:
        byte[] decodedFile = new byte[cipherTextPoint.length/2];
        long startTime = System.currentTimeMillis();
        for(int i=0; i<cipherTextPoint.length/2; i++) {
            Point cipher[] = new Point[2];
            cipher[0] = cipherTextPoint[i*2];
            cipher[1] = cipherTextPoint[i*2+1];
            
            Point dekrip = alice.decrypt(cipher);
            decodedFile[i] = dekrip.convertToByte();
        }
        
        long endTime = System.currentTimeMillis();
        long seconds = (endTime - startTime);
        String s = "" + seconds;
        plainTextJTextArea.setText(new String(decodedFile));
        encryptDurationJTextField.setText(s);
        cipherTextSizeJTextField.setText("" + decodedFile.length);
    }//GEN-LAST:event_decryptJButtonActionPerformed

    private void aJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aJTextFieldActionPerformed

    private void bJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bJTextFieldActionPerformed

    private void basePointYJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basePointYJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_basePointYJTextFieldActionPerformed

    private void pJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pJTextFieldActionPerformed

    private void basePointXJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basePointXJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_basePointXJTextFieldActionPerformed

    private void generatorPublicPrivateKeyJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatorPublicPrivateKeyJButtonActionPerformed
        // TODO add your handling code here:
        myCurve = new EllipticCurve(new BigInteger(aJTextField.getText()), new BigInteger(bJTextField.getText()), new BigInteger(pJTextField.getText()));
        BigInteger x = new BigInteger(basePointXJTextField.getText());
        BigInteger y = new BigInteger(basePointYJTextField.getText());
        BigInteger nA = new BigInteger(nAJTextField.getText());
        
        alice = new ECC(myCurve, x, y, nA);
        
        basePoint = new Point(x,y);
        publicKey = myCurve.multiply(nA, basePoint);
        publicKeyJTextField.setText(publicKey.toString());
        
        privateKeyJTextField.setText(nA.toString());
    }//GEN-LAST:event_generatorPublicPrivateKeyJButtonActionPerformed

    private void cipherTextSaverJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cipherTextSaverJButtonActionPerformed
        // TODO add your handling code here:
        int retval;
        
        JFileChooser fileChooser = new JFileChooser();
        retval = fileChooser.showSaveDialog(this);
        if(retval == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            FileWriter fw;
            try {
                if (!file.exists()) {
                    file.createNewFile();
                }
                try (BufferedWriter fileOut = new BufferedWriter(new FileWriter(file.getAbsoluteFile()))) {
                    cipherTextJTextArea.write(fileOut);
                }
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cipherTextSaverJButtonActionPerformed

    private void plainTextSaverJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plainTextSaverJButtonActionPerformed
        // TODO add your handling code here:
        int retval;
        
        JFileChooser fileChooser = new JFileChooser();
        retval = fileChooser.showSaveDialog(this);
        if(retval == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            FileWriter fw;
            try {
                if (!file.exists()) {
                    file.createNewFile();
                }
                try (BufferedWriter fileOut = new BufferedWriter(new FileWriter(file.getAbsoluteFile()))) {
                    plainTextJTextArea.write(fileOut);
                }
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_plainTextSaverJButtonActionPerformed

    private void publicKeySaverJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicKeySaverJButtonActionPerformed
        // TODO add your handling code here:
        int retval;
        
        JFileChooser fileChooser = new JFileChooser();
        retval = fileChooser.showSaveDialog(this);
        if(retval == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            FileWriter fw;
            try {
                if (!file.exists()) {
                    file.createNewFile();
                }
                try (BufferedWriter fileOut = new BufferedWriter(new FileWriter(file.getAbsoluteFile()))) {
                    publicKeyJTextField.write(fileOut);
                }
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_publicKeySaverJButtonActionPerformed

    private void privateKeySaverJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privateKeySaverJButtonActionPerformed
        // TODO add your handling code here:
        int retval;
        
        JFileChooser fileChooser = new JFileChooser();
        retval = fileChooser.showSaveDialog(this);
        if(retval == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            FileWriter fw;
            try {
                if (!file.exists()) {
                    file.createNewFile();
                }
                try (BufferedWriter fileOut = new BufferedWriter(new FileWriter(file.getAbsoluteFile()))) {
                    privateKeyJTextField.write(fileOut);
                }
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_privateKeySaverJButtonActionPerformed

    private void decryptDurationJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptDurationJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_decryptDurationJTextFieldActionPerformed

    private void plainTextSizeJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plainTextSizeJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_plainTextSizeJTextFieldActionPerformed

    private void cipherTextSizeJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cipherTextSizeJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cipherTextSizeJTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aJTextField;
    private javax.swing.JTextField bJTextField;
    private javax.swing.JTextField basePointXJTextField;
    private javax.swing.JTextField basePointYJTextField;
    private javax.swing.JButton cipherTextFIleChooserJButton;
    private javax.swing.JTextField cipherTextFilePathJTextField;
    private javax.swing.JTextArea cipherTextJTextArea;
    private javax.swing.JButton cipherTextSaverJButton;
    private javax.swing.JTextField cipherTextSizeJTextField;
    private javax.swing.JTextField decryptDurationJTextField;
    private javax.swing.JButton decryptJButton;
    private javax.swing.JTextField encryptDurationJTextField;
    private javax.swing.JButton encryptJButton;
    private javax.swing.JButton generatorPublicPrivateKeyJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nAJTextField;
    private javax.swing.JTextField pJTextField;
    private javax.swing.JButton plainTextFileChooserJButton;
    private javax.swing.JTextField plainTextFilePathJTextField;
    private javax.swing.JTextArea plainTextJTextArea;
    private javax.swing.JButton plainTextSaverJButton;
    private javax.swing.JTextField plainTextSizeJTextField;
    private javax.swing.JButton privateKeyFileChooserJButton;
    private javax.swing.JTextField privateKeyJTextField;
    private javax.swing.JTextField privateKeyPathJTextField;
    private javax.swing.JButton privateKeySaverJButton;
    private javax.swing.JButton publicKeyFileChooserJButton;
    private javax.swing.JTextField publicKeyJTextField;
    private javax.swing.JTextField publicKeyPathJTextField;
    private javax.swing.JButton publicKeySaverJButton;
    // End of variables declaration//GEN-END:variables

    
    private String plainText;
    private String cipherText;
    private Point publicKey;
    private String privateKey;
    private ECC alice;
    private EllipticCurve myCurve;
    private Point basePoint;
    private Point[] cipherTextPoint;
}
